name: packages

on:
  workflow_dispatch: {}
  push:
    tags:
      - "v*.*.*"      # build aussi quand tu pousses un tag de release

permissions:
  contents: read

env:
  RUST_TOOLCHAIN: "1.86.0"

jobs:
  deb:
    name: Build .deb (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            pkg-config libssl-dev gcc make ruby-full rubygems ca-certificates
          sudo gem install --no-document fpm

      - name: Install Rust ${{ env.RUST_TOOLCHAIN }}
        run: |
          curl -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain ${RUST_TOOLCHAIN}
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Build shai (release)
        run: |
          cargo build --release -p shai-cli
          file target/release/shai

      - name: Compute version
        id: v
        run: |
          V=$(cargo metadata --format-version 1 | jq -r '.packages[] | select(.name=="shai-cli") | .version')
          echo "version=$V" >> "$GITHUB_OUTPUT"

      - name: Stage files
        run: |
          mkdir -p pkgroot/usr/bin pkgroot/usr/share/doc/shai
          cp target/release/shai pkgroot/usr/bin/shai
          [ -f LICENSE ] && cp LICENSE pkgroot/usr/share/doc/shai/ || true

      - name: Build .deb
        run: |
          fpm -s dir -t deb \
            -n shai -v "${{ steps.v.outputs.version }}" \
            --license "Apache-2.0" \
            --vendor "OVHcloud" \
            --description "SHAI CLI (Shell AI) - terminal assistant" \
            --depends "libssl3" --depends "libstdc++6" --depends "libgcc-s1" \
            -C pkgroot .
          ls -l *.deb

      - name: Upload .deb
        uses: actions/upload-artifact@v4
        with:
          name: shai-${{ steps.v.outputs.version }}-deb
          path: ./*.deb
          if-no-files-found: error

  rpm:
    name: Build .rpm (${{ matrix.el.name }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        el:
          - { name: "el9",  image: "registry.access.redhat.com/ubi9/ubi" }
          - { name: "el10", image: "registry.access.redhat.com/ubi10/ubi" }
    container:
      image: ${{ matrix.el.image }}

    steps:
      - name: Install base tools
        run: |
          set -e
          dnf -y install dnf-plugins-core
          dnf -y groupinstall "Development Tools"
          dnf -y install git curl which ca-certificates \
                         openssl-devel pkgconf-pkg-config \
                         ruby ruby-devel rubygems \
                         rpm-build redhat-rpm-config
          gem install --no-document fpm

      - name: Checkout (host) â†’ /workspace (container)
        uses: actions/checkout@v4
        with:
          path: /workspace

      - name: Install Rust ${{ env.RUST_TOOLCHAIN }}
        run: |
          curl -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain ${RUST_TOOLCHAIN}
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Build shai (release)
        working-directory: /workspace
        run: cargo build --release -p shai-cli

      - name: Compute version
        id: v
        working-directory: /workspace
        run: |
          V=$(cargo metadata --format-version 1 | jq -r '.packages[] | select(.name=="shai-cli") | .version')
          echo "version=$V" >> "$GITHUB_OUTPUT"

      - name: Stage files
        working-directory: /workspace
        run: |
          mkdir -p pkgroot/usr/bin pkgroot/usr/share/licenses/shai
          cp target/release/shai pkgroot/usr/bin/shai
          [ -f LICENSE ] && cp LICENSE pkgroot/usr/share/licenses/shai/LICENSE || true

      - name: Build .rpm
        working-directory: /workspace
        run: |
          # RHEL runtime deps: glibc, libstdc++, openssl-libs
          fpm -s dir -t rpm \
            -n shai -v "${{ steps.v.outputs.version }}" \
            --license "Apache-2.0" \
            --vendor "OVHcloud" \
            --description "SHAI CLI (Shell AI) - terminal assistant" \
            --depends "openssl-libs" --depends "libstdc++" --depends "glibc" \
            -C pkgroot .
          ls -l *.rpm

      - name: Upload .rpm
        uses: actions/upload-artifact@v4
        with:
          name: shai-${{ steps.v.outputs.version }}-${{ matrix.el.name }}-rpm
          path: /workspace/*.rpm
          if-no-files-found: error
